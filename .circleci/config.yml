version: 2.1

orbs:
  python: circleci/python@1.5.0

jobs:
  lint:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - run:
          name: install hadolint
          command: |
          sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.10.0/hadolint-Linux-x86_64
          sudo chmod +x /bin/hadolint
      - run:
          name: hadolint dockerfile
          command: |
          /bin/hadolint Dockerfile

  build-and-test:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run tests
          command: pytest
  push-to-ecr:
    docker:
      - image: cimg/python:3.11.0
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: install aws
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            aws --version
      - run:
          name: login to ECR and push image
          command: |
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 293362435147.dkr.ecr.us-east-1.amazonaws.com
            docker build -t project-5:${CIRCLE_WORKFLOW_ID:0:7} .
            docker tag project-5:${CIRCLE_WORKFLOW_ID:0:7} 293362435147.dkr.ecr.us-east-1.amazonaws.com/project-5:${CIRCLE_WORKFLOW_ID:0:7}
            docker push 293362435147.dkr.ecr.us-east-1.amazonaws.com/project-5:${CIRCLE_WORKFLOW_ID:0:7}

  create_cluster:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: install eksctl
          command: |
            yum install -y tar gzip
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/v0.125.0/eksctl_Linux_amd64.tar.gz" | tar xz -C /tmp
            mv /tmp/eksctl /usr/local/bin
            eksctl create cluster --name project-5 --region=us-east-1 --zones us-east-1a,us-east-1b
  deploy_app:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: deploy application
          command: |
            curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.24.7/2022-10-31/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
            kubectl version --short --client
            aws eks update-kubeconfig --name project-5 --region us-east-1
            kubectl set image deployment/project-5 project-5=293362435147.dkr.ecr.us-east-1.amazonaws.com/project-5:${CIRCLE_WORKFLOW_ID:0:7}
#            # kubectl create deploy project-5 --image=293362435147.dkr.ecr.us-east-1.amazonaws.com/project-5:${CIRCLE_WORKFLOW_ID:0:7}
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    jobs:
      - lint
      - build-and-test
      - push-to-ecr:
          requires:
            - build-and-test
      # - create_cluster:
      #     requires:
      #       - push-to-ecr
      - deploy_app:
          requires:
            - push-to-ecr
